version: "3.9"

services:
  backend:
    restart: always
    build:
      context: ./api
    ports:
      - "8000:8000"
    command: >
      sh -c "python manage.py collectstatic --no-input
             exec gunicorn --bind 0.0.0.0:8000 api.wsgi:application -w 2"
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
    volumes:
      - front_build:/frontend/build

  nginx:
    image: nginx:latest
    restart: always
    ports:
      - 80:8080
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:rw
      - front_build:/var/www/frontend
    depends_on:
      - backend
      - frontend
  db:
    image: postgres:14.5-alpine
    restart: always
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
volumes:
  front_build:
  postgres-data:
